pipeline{
	agent any

	stages{
		stage ('Compile Stage'){

			steps {
				withMaven(maven : 'default'){
					bat 'mvn clean compile'
				}
			}
		}
		stage ('Testing Stage'){

			steps {
				withMaven(maven : 'default'){
					bat 'mvn test'
				}
			}
		}
		
		stage ('SonarQube Analysis'){
			steps{
				withSonarQubeEnv('sonarqube') {
				bat 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar'
									}
							}
					}
		stage ('Build Stage'){

			steps {
				withMaven(maven : 'default'){
					bat 'mvn install'
				}
			}
		}			
		stage ('Artifactory Deploy'){
			steps{
				script {
				def server = Artifactory.server('default')
				def rtMaven = Artifactory.newMavenBuild()
				rtMaven.resolver server: server, releaseRepo: 'libs-release', snapshotRepo: 'libs-snapshot'
				rtMaven.deployer server: server, releaseRepo: 'kartik_r', snapshotRepo: 'kartik_r'
				rtMaven.tool = 'default'
				def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'install'
				server.publishBuildInfo buildInfo
						}
					}
				}
		
}
}
