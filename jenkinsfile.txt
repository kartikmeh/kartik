pipeline{
	agent any

	stages{
		stage ('Compile Stage'){

			steps {
				withMaven(maven : 'Maven'){
					bat 'mvn clean compile'
				}
			}
		}
		stage ('Testing Stage'){

			steps {
				withMaven(maven : 'Maven'){
					bat 'mvn test'
				}
			}
		}
		stage ('Build Stage'){

			steps {
				withMaven(maven : 'Maven'){
					bat 'mvn install'
				}
			}
		}

		stage ('upload') {
  			steps{
     		    def server = Artifactory.server "Jfrog"
  def buildInfo = Artifactory.newBuildInfo()
  buildInfo.env.capture = true
  def rtMaven = Artifactory.newMavenBuild()
  rtMaven.tool = Maven
  rtMaven.opts = "-Denv=dev"
  rtMaven.deployer releaseRepo:'kartik_r', snapshotRepo:'kartik_r', server: server
  rtMaven.resolver releaseRepo:'libs-release', snapshotRepo:'libs-snapshot', server: server

  rtMaven.run pom: 'pom.xml', goals: 'clean install', buildInfo: buildInfo

  buildInfo.retention maxBuilds: 10, maxDays: 7, deleteBuildArtifacts: true
  // Publish build info.
  server.publishBuildInfo buildInfo
      }
      }
}
}
